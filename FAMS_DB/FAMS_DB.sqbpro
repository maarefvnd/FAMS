<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="FAMS_DB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3596"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="0" parent="0"/><expanded_item id="1" parent="0"/><expanded_item id="2" parent="0"/><expanded_item id="3" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="flights" custom_title="0" dock_id="1" table="4,7:mainflights"/><dock_state state="000000ff00000000fd00000001000000020000024800000215fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000002480000011e00ffffff000002480000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Book" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="55"/><column index="2" value="127"/><column index="3" value="103"/><column index="4" value="71"/><column index="5" value="49"/><column index="6" value="79"/><column index="7" value="87"/><column index="8" value="43"/><column index="9" value="48"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Members" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="87"/><column index="2" value="55"/><column index="3" value="71"/><column index="4" value="95"/><column index="5" value="72"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">PRAGMA foreign_keys = ON;

-- ۱. جدول مسافران
CREATE TABLE passengers (
    passenger_id      INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name        TEXT    NOT NULL,
    last_name         TEXT    NOT NULL,
    national_code     TEXT    NOT NULL UNIQUE,
    passport_number   TEXT    NOT NULL UNIQUE,
    birth_date        DATE    NOT NULL,
    balance           NUMERIC NOT NULL CHECK (balance &gt;= 0),
    created_at        DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at        DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_deleted        INTEGER NOT NULL DEFAULT 0 CHECK (is_deleted IN (0,1))
);

-- ایندکس برای جستجوهای متداول
CREATE INDEX idx_passengers_name       ON passengers(first_name, last_name);
CREATE INDEX idx_passengers_national   ON passengers(national_code);
CREATE INDEX idx_passengers_passport   ON passengers(passport_number);


-- ۲. جدول پروازها
CREATE TABLE flights (
    flight_id         INTEGER PRIMARY KEY AUTOINCREMENT,
    flight_number     TEXT    NOT NULL UNIQUE,
    origin            TEXT    NOT NULL,
    destination       TEXT    NOT NULL,
    departure_time    DATETIME NOT NULL,
    seats_total       INTEGER NOT NULL CHECK (seats_total &gt; 0),
    seats_available   INTEGER NOT NULL CHECK (seats_available &gt;= 0),
    price             NUMERIC NOT NULL CHECK (price &gt;= 0),
    created_at        DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at        DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_deleted        INTEGER NOT NULL DEFAULT 0 CHECK (is_deleted IN (0,1))
);

-- ایندکس برای جستجو بر اساس مسیر و زمان
CREATE INDEX idx_flights_route       ON flights(origin, destination);
CREATE INDEX idx_flights_departure   ON flights(departure_time);


-- ۳. جدول وضعیت‌های رزرو (اختیاری برای یکپارچگی بیشتر)
CREATE TABLE reservation_status (
    status_code   TEXT PRIMARY KEY,            -- 'booked', 'cancelled', 'refunded', 'completed'
    description   TEXT NOT NULL
);

-- بارگذاری مقادیر پیش‌فرض
INSERT INTO reservation_status(status_code, description) VALUES
    ('booked',    'رزرو شده'),
    ('cancelled', 'لغو شده'),
    ('refunded',  'استرداد شده'),
    ('completed', 'پایان‌یافته');


-- ۴. جدول رزروها (ارتباط N:N بین مسافر و پرواز)
CREATE TABLE reservations (
    reservation_id   INTEGER PRIMARY KEY AUTOINCREMENT,
    passenger_id     INTEGER NOT NULL REFERENCES passengers(passenger_id),
    flight_id        INTEGER NOT NULL REFERENCES flights(flight_id),
    reserved_at      DATETIME DEFAULT CURRENT_TIMESTAMP,
    amount_paid      NUMERIC NOT NULL CHECK (amount_paid &gt;= 0),
    status_code      TEXT    NOT NULL REFERENCES reservation_status(status_code),
    refund_amount    NUMERIC DEFAULT 0 CHECK (refund_amount &gt;= 0),
    updated_at       DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(passenger_id, flight_id, status_code)  -- جلوگیری از رزرو چندباره همزمان
);

-- ایندکس برای جستجوهای مرسوم
CREATE INDEX idx_res_passenger    ON reservations(passenger_id);
CREATE INDEX idx_res_flight       ON reservations(flight_id);
CREATE INDEX idx_res_status       ON reservations(status_code);


-- ۵. تریگرها برای به‌روزرسانی خودکار تعداد صندلی
-- بعد از رزرو جدید (وضعیت booked) صندلی‌ها کم شود
CREATE TRIGGER trg_after_insert_reservation
AFTER INSERT ON reservations
WHEN NEW.status_code = 'booked'
BEGIN
    UPDATE flights
    SET seats_available = seats_available - 1,
        updated_at = CURRENT_TIMESTAMP
    WHERE flight_id = NEW.flight_id;
END;

-- بعد از تغییر وضعیت از booked به cancelled یا refunded صندلی آزاد شود
CREATE TRIGGER trg_after_update_reservation_cancel
AFTER UPDATE ON reservations
WHEN OLD.status_code = 'booked' 
  AND NEW.status_code IN ('cancelled','refunded')
BEGIN
    UPDATE flights
    SET seats_available = seats_available + 1,
        updated_at = CURRENT_TIMESTAMP
    WHERE flight_id = OLD.flight_id;
END;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
